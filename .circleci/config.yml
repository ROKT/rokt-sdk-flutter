version: 2.1
jobs:
  distribute:
    macos:
      xcode: 12.5.1
    steps:
    - run:
        command: |
          mkdir ~/development && cd $_
          if [ "$(uname)" == 'Darwin' ]; then
            curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_2.10.5-stable.zip
            unzip -qq flutter_sdk.zip
          elif [ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]; then
            curl -o flutter_sdk.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.10.5-stable.tar.xz
            tar xf flutter_sdk.tar.xz
          else
            echo "Your platform ($(uname -a)) is not supported."
            exit 1
          fi
          echo 'export PATH=~/development/flutter/bin:$PATH' >> $BASH_ENV
        name: Install Flutter SDK
    - run:
        command: flutter doctor
    - checkout
    - restore_cache:
        keys:
        - pub-.-{{ checksum "./example/pubspec.lock" }}-{{ arch }}
    - run:
        command: flutter pub get
        name: Install Dependencies
        working_directory: ./example
    - save_cache:
        key: pub-.-{{ checksum "./example/pubspec.lock" }}-{{ arch }}
        paths:
        - ./example/.dart_tool
    - restore_cache:
        keys:
        - pod-v1-{{ checksum "./example/ios/Podfile.lock" }}
    - run:
        command: pod install
        name: Install Dependencies
        working_directory: ./example/ios
    - save_cache:
        key: pod-v1-{{ checksum "./example/ios/Podfile.lock" }}
        paths:
        - ./example/ios/Pods
    # - restore_cache:
    #     keys:
    #     - bundle-v1-ios-{{ checksum "./example/ios/Gemfile.lock" }}
    # - run:
    #     command: |
    #       bundle config set path ./example/vendor/bundle
    #       bundle install
    #     name: Install Dependencies
    #     working_directory: ./example/ios
    # - save_cache:
    #     key: bundle-v1-ios-{{ checksum "./example/ios/Gemfile.lock" }}
    #     paths:
    #     - ./example/ios/vendor/bundle
    - run:
        # command: bundle exec fastlane distribute
        command: flutter test
        working_directory: example

#        android process
    - run:
        name: Setup environment variables
        command: |
          echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
          echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
          echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
          echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
          echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
          echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
    - run:
        name: Install Android sdk
        command: |
          brew update
          HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
          HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
    - run:
        name: Install emulator dependencies
        command: (yes | sdkmanager "platform-tools" "platforms;android-26" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;26.0.0" "system-images;android-26;google_apis;x86" "emulator" --verbose) || true
    - run:
        name: Download Android Dependencies
        command: ./gradlew androidDependencies
    - run: avdmanager create avd -n Pixel_2_API_26 -k "system-images;android-26;google_apis;x86" -g google_apis -d "Nexus 5"
    - run:
        name: Run emulator in background
        command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_26 -skin 1080x2066 -memory 2048 -noaudio
        background: true
    - run:
        name: Run Tests
        command: ./gradlew app:connectedAndroidTest
        working_directory: example/android
#        android emulator
workflows:
  distribute:
    jobs:
    - distribute
  version: 2