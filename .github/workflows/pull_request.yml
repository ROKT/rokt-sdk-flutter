name: Flutter Pull Request

on:
  push:

env:
  FLUTTER_VERSION: 3.10.0
  RUBY_VERSION: 2.7.6

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: example
        run: flutter pub get
      
      - name: Verify formatting
        working-directory: example
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        working-directory: example
        run: flutter analyze

  build-test-ios:
    name: Build & Test iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          rubygems: latest

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Set up Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Get all packages Flutter
        working-directory: example
        run: |
          flutter pub get
          flutter precache --ios

      - uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 16'

      - name: Install iOS Dependencies
        working-directory: example
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle install
          cd ios
          bundle install
          bundle exec pod install --verbose --repo-update

      - name: Run Flutter Tests (iOS)
        working-directory: .
        run: |
          bundle exec flutter test
          bundle exec flutter test integration_test/app_test.dart

  build-test-android:
    name: Build & Test Android
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          rubygems: latest

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get all packages Flutter
        working-directory: example
        run: |
          flutter pub get

      - name: Setup JDK
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 #v4.7.0
        with:
          java-version: "17"
          distribution: "microsoft"

      - name: Set up Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Configure Android SDK
        run: |
          flutter config --android-sdk ${ANDROID_HOME}

      - name: Create and start Android Emulator
        run: |
          echo "no" | avdmanager create avd --force --name "flutter" --package "system-images;android-30;google_apis;x86_64"
          emulator -avd "flutter" \
            -gpu swiftshader_indirect -noaudio -no-boot-anim \
            -netdelay none -accel on -no-window -no-snapshot \
            -memory 4096 -partition-size 4096 &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Build and Test Android
        working-directory: example
        run: |
          flutter build apk --debug
          flutter test integration_test/app_test.dart
